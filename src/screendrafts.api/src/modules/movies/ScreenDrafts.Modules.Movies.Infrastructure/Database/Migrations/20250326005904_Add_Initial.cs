// <autogenerated />
using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace ScreenDrafts.Modules.Movies.Infrastructure.Database.Migrations
{
    /// <inheritdoc />
    public partial class Add_Initial : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.EnsureSchema(
                name: "movies");

            migrationBuilder.CreateTable(
                name: "genres",
                schema: "movies",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    name = table.Column<string>(type: "text", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_genres", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "inbox_message_consumers",
                schema: "movies",
                columns: table => new
                {
                    inbox_message_id = table.Column<Guid>(type: "uuid", nullable: false),
                    name = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_inbox_message_consumers", x => new { x.inbox_message_id, x.name });
                });

            migrationBuilder.CreateTable(
                name: "inbox_messages",
                schema: "movies",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    type = table.Column<string>(type: "text", nullable: false),
                    content = table.Column<string>(type: "jsonb", maxLength: 2000, nullable: false),
                    occurred_on_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    processed_on_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: true),
                    error = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_inbox_messages", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "movies",
                schema: "movies",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    imdb_id = table.Column<string>(type: "text", nullable: false),
                    title = table.Column<string>(type: "text", nullable: false),
                    year = table.Column<string>(type: "text", nullable: false),
                    plot = table.Column<string>(type: "text", nullable: true),
                    image = table.Column<string>(type: "text", nullable: false),
                    release_date = table.Column<string>(type: "text", nullable: true),
                    youtube_trailer_url = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_movies", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "outbox_message_consumers",
                schema: "movies",
                columns: table => new
                {
                    outbox_message_id = table.Column<Guid>(type: "uuid", nullable: false),
                    name = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_outbox_message_consumers", x => new { x.outbox_message_id, x.name });
                });

            migrationBuilder.CreateTable(
                name: "outbox_messages",
                schema: "movies",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    type = table.Column<string>(type: "text", nullable: false),
                    content = table.Column<string>(type: "jsonb", maxLength: 2000, nullable: false),
                    occurred_on_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    processed_on_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: true),
                    error = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_outbox_messages", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "people",
                schema: "movies",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    imdb_id = table.Column<string>(type: "text", nullable: false),
                    name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_people", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "production_companies",
                schema: "movies",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    name = table.Column<string>(type: "text", nullable: false),
                    imdb_id = table.Column<string>(type: "text", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_production_companies", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "movie_genres",
                schema: "movies",
                columns: table => new
                {
                    movie_id = table.Column<Guid>(type: "uuid", nullable: false),
                    genre_id = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_movie_genres", x => new { x.movie_id, x.genre_id });
                    table.ForeignKey(
                        name: "fk_movie_genres_genres_genre_id",
                        column: x => x.genre_id,
                        principalSchema: "movies",
                        principalTable: "genres",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_movie_genres_movies_movie_id",
                        column: x => x.movie_id,
                        principalSchema: "movies",
                        principalTable: "movies",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "movie_actors",
                schema: "movies",
                columns: table => new
                {
                    movie_id = table.Column<Guid>(type: "uuid", nullable: false),
                    actor_id = table.Column<Guid>(type: "uuid", nullable: false),
                    id = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_movie_actors", x => new { x.movie_id, x.actor_id });
                    table.ForeignKey(
                        name: "fk_movie_actors_movies_movie_id",
                        column: x => x.movie_id,
                        principalSchema: "movies",
                        principalTable: "movies",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_movie_actors_people_actor_id",
                        column: x => x.actor_id,
                        principalSchema: "movies",
                        principalTable: "people",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "movie_directors",
                schema: "movies",
                columns: table => new
                {
                    movie_id = table.Column<Guid>(type: "uuid", nullable: false),
                    director_id = table.Column<Guid>(type: "uuid", nullable: false),
                    id = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_movie_directors", x => new { x.movie_id, x.director_id });
                    table.ForeignKey(
                        name: "fk_movie_directors_movies_movie_id",
                        column: x => x.movie_id,
                        principalSchema: "movies",
                        principalTable: "movies",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_movie_directors_people_director_id",
                        column: x => x.director_id,
                        principalSchema: "movies",
                        principalTable: "people",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "movie_producers",
                schema: "movies",
                columns: table => new
                {
                    movie_id = table.Column<Guid>(type: "uuid", nullable: false),
                    producer_id = table.Column<Guid>(type: "uuid", nullable: false),
                    id = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_movie_producers", x => new { x.movie_id, x.producer_id });
                    table.ForeignKey(
                        name: "fk_movie_producers_movies_movie_id",
                        column: x => x.movie_id,
                        principalSchema: "movies",
                        principalTable: "movies",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_movie_producers_people_producer_id",
                        column: x => x.producer_id,
                        principalSchema: "movies",
                        principalTable: "people",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "movie_writers",
                schema: "movies",
                columns: table => new
                {
                    movie_id = table.Column<Guid>(type: "uuid", nullable: false),
                    writer_id = table.Column<Guid>(type: "uuid", nullable: false),
                    id = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_movie_writers", x => new { x.movie_id, x.writer_id });
                    table.ForeignKey(
                        name: "fk_movie_writers_movies_movie_id",
                        column: x => x.movie_id,
                        principalSchema: "movies",
                        principalTable: "movies",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_movie_writers_people_writer_id",
                        column: x => x.writer_id,
                        principalSchema: "movies",
                        principalTable: "people",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "movie_production_companies",
                schema: "movies",
                columns: table => new
                {
                    movie_id = table.Column<Guid>(type: "uuid", nullable: false),
                    production_company_id = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_movie_production_companies", x => new { x.movie_id, x.production_company_id });
                    table.ForeignKey(
                        name: "fk_movie_production_companies_movies_movie_id",
                        column: x => x.movie_id,
                        principalSchema: "movies",
                        principalTable: "movies",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_movie_production_companies_production_companies_production_",
                        column: x => x.production_company_id,
                        principalSchema: "movies",
                        principalTable: "production_companies",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "ix_movie_actors_actor_id",
                schema: "movies",
                table: "movie_actors",
                column: "actor_id");

            migrationBuilder.CreateIndex(
                name: "ix_movie_directors_director_id",
                schema: "movies",
                table: "movie_directors",
                column: "director_id");

            migrationBuilder.CreateIndex(
                name: "ix_movie_genres_genre_id",
                schema: "movies",
                table: "movie_genres",
                column: "genre_id");

            migrationBuilder.CreateIndex(
                name: "ix_movie_producers_producer_id",
                schema: "movies",
                table: "movie_producers",
                column: "producer_id");

            migrationBuilder.CreateIndex(
                name: "ix_movie_production_companies_production_company_id",
                schema: "movies",
                table: "movie_production_companies",
                column: "production_company_id");

            migrationBuilder.CreateIndex(
                name: "ix_movie_writers_writer_id",
                schema: "movies",
                table: "movie_writers",
                column: "writer_id");

            migrationBuilder.CreateIndex(
                name: "ix_movies_imdb_id",
                schema: "movies",
                table: "movies",
                column: "imdb_id");

            migrationBuilder.CreateIndex(
                name: "ix_production_companies_imdb_id",
                schema: "movies",
                table: "production_companies",
                column: "imdb_id");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "inbox_message_consumers",
                schema: "movies");

            migrationBuilder.DropTable(
                name: "inbox_messages",
                schema: "movies");

            migrationBuilder.DropTable(
                name: "movie_actors",
                schema: "movies");

            migrationBuilder.DropTable(
                name: "movie_directors",
                schema: "movies");

            migrationBuilder.DropTable(
                name: "movie_genres",
                schema: "movies");

            migrationBuilder.DropTable(
                name: "movie_producers",
                schema: "movies");

            migrationBuilder.DropTable(
                name: "movie_production_companies",
                schema: "movies");

            migrationBuilder.DropTable(
                name: "movie_writers",
                schema: "movies");

            migrationBuilder.DropTable(
                name: "outbox_message_consumers",
                schema: "movies");

            migrationBuilder.DropTable(
                name: "outbox_messages",
                schema: "movies");

            migrationBuilder.DropTable(
                name: "genres",
                schema: "movies");

            migrationBuilder.DropTable(
                name: "production_companies",
                schema: "movies");

            migrationBuilder.DropTable(
                name: "movies",
                schema: "movies");

            migrationBuilder.DropTable(
                name: "people",
                schema: "movies");
        }
    }
}
