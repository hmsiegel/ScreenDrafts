// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ScreenDrafts.Modules.Drafts.Infrastructure.Database.Migrations
{
    /// <inheritdoc />
    public partial class Add_Initial : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.EnsureSchema(
                name: "drafts");

            migrationBuilder.CreateTable(
                name: "drafter_teams",
                schema: "drafts",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_drafter_teams", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "drafters",
                schema: "drafts",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    readable_id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    user_id = table.Column<Guid>(type: "uuid", nullable: true),
                    name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_drafters", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "drafts",
                schema: "drafts",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    readable_id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    title = table.Column<string>(type: "character varying(255)", maxLength: 255, nullable: false),
                    draft_type = table.Column<int>(type: "integer", nullable: false),
                    episode_type = table.Column<int>(type: "integer", nullable: false),
                    total_picks = table.Column<int>(type: "integer", nullable: false),
                    total_drafters = table.Column<int>(type: "integer", nullable: false),
                    total_drafter_teams = table.Column<int>(type: "integer", nullable: false),
                    total_hosts = table.Column<int>(type: "integer", nullable: false),
                    episode_number = table.Column<string>(type: "text", nullable: true),
                    draft_status = table.Column<int>(type: "integer", nullable: false),
                    created_at_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    updated_at_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: true),
                    is_patreon_only = table.Column<bool>(type: "boolean", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_drafts", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "hosts",
                schema: "drafts",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    readable_id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    user_id = table.Column<Guid>(type: "uuid", nullable: true),
                    host_name = table.Column<string>(type: "text", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_hosts", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "inbox_message_consumers",
                schema: "drafts",
                columns: table => new
                {
                    inbox_message_id = table.Column<Guid>(type: "uuid", nullable: false),
                    name = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_inbox_message_consumers", x => new { x.inbox_message_id, x.name });
                });

            migrationBuilder.CreateTable(
                name: "inbox_messages",
                schema: "drafts",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    type = table.Column<string>(type: "text", nullable: false),
                    content = table.Column<string>(type: "jsonb", maxLength: 2000, nullable: false),
                    occurred_on_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    processed_on_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: true),
                    error = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_inbox_messages", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "movies",
                schema: "drafts",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    movie_title = table.Column<string>(type: "text", nullable: false),
                    imdb_id = table.Column<string>(type: "text", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_movies", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "outbox_message_consumers",
                schema: "drafts",
                columns: table => new
                {
                    outbox_message_id = table.Column<Guid>(type: "uuid", nullable: false),
                    name = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_outbox_message_consumers", x => new { x.outbox_message_id, x.name });
                });

            migrationBuilder.CreateTable(
                name: "outbox_messages",
                schema: "drafts",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    type = table.Column<string>(type: "text", nullable: false),
                    content = table.Column<string>(type: "jsonb", maxLength: 2000, nullable: false),
                    occurred_on_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    processed_on_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: true),
                    error = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_outbox_messages", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "drafter_team_drafter",
                schema: "drafts",
                columns: table => new
                {
                    drafter_id = table.Column<Guid>(type: "uuid", nullable: false),
                    drafter_team_id = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_drafter_team_drafter", x => new { x.drafter_id, x.drafter_team_id });
                    table.ForeignKey(
                        name: "fk_drafter_team_drafter_drafter_teams_drafter_team_id",
                        column: x => x.drafter_team_id,
                        principalSchema: "drafts",
                        principalTable: "drafter_teams",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_drafter_team_drafter_drafters_drafter_id",
                        column: x => x.drafter_id,
                        principalSchema: "drafts",
                        principalTable: "drafters",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "rollover_veto_overrides",
                schema: "drafts",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    drafter_id = table.Column<Guid>(type: "uuid", nullable: false),
                    from_draft_id = table.Column<Guid>(type: "uuid", nullable: false),
                    to_draft_id = table.Column<Guid>(type: "uuid", nullable: true),
                    is_used = table.Column<bool>(type: "boolean", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_rollover_veto_overrides", x => x.id);
                    table.ForeignKey(
                        name: "fk_rollover_veto_overrides_drafters_drafter_id",
                        column: x => x.drafter_id,
                        principalSchema: "drafts",
                        principalTable: "drafters",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "rollover_vetoes",
                schema: "drafts",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    drafter_id = table.Column<Guid>(type: "uuid", nullable: false),
                    from_draft_id = table.Column<Guid>(type: "uuid", nullable: false),
                    to_draft_id = table.Column<Guid>(type: "uuid", nullable: true),
                    is_used = table.Column<bool>(type: "boolean", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_rollover_vetoes", x => x.id);
                    table.ForeignKey(
                        name: "fk_rollover_vetoes_drafters_drafter_id",
                        column: x => x.drafter_id,
                        principalSchema: "drafts",
                        principalTable: "drafters",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "vetoes",
                schema: "drafts",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    is_used = table.Column<bool>(type: "boolean", nullable: false),
                    drafter_id = table.Column<Guid>(type: "uuid", nullable: true),
                    drafter_team_id = table.Column<Guid>(type: "uuid", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_vetoes", x => x.id);
                    table.ForeignKey(
                        name: "fk_vetoes_drafter_teams_drafter_team_id",
                        column: x => x.drafter_team_id,
                        principalSchema: "drafts",
                        principalTable: "drafter_teams",
                        principalColumn: "id");
                    table.ForeignKey(
                        name: "fk_vetoes_drafters_drafter_id",
                        column: x => x.drafter_id,
                        principalSchema: "drafts",
                        principalTable: "drafters",
                        principalColumn: "id");
                });

            migrationBuilder.CreateTable(
                name: "draft_release_date",
                schema: "drafts",
                columns: table => new
                {
                    draft_id = table.Column<Guid>(type: "uuid", nullable: false),
                    release_date = table.Column<DateOnly>(type: "date", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_draft_release_date", x => new { x.draft_id, x.release_date });
                    table.ForeignKey(
                        name: "fk_draft_release_date_drafts_draft_id",
                        column: x => x.draft_id,
                        principalSchema: "drafts",
                        principalTable: "drafts",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "drafter_draft_stats",
                schema: "drafts",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    drafter_id = table.Column<Guid>(type: "uuid", nullable: false),
                    draft_id = table.Column<Guid>(type: "uuid", nullable: false),
                    starting_vetoes = table.Column<int>(type: "integer", nullable: false, defaultValue: 1),
                    starting_veto_overrides = table.Column<int>(type: "integer", nullable: false, defaultValue: 0),
                    commissioner_overrides = table.Column<int>(type: "integer", nullable: false),
                    rollovers_applied = table.Column<int>(type: "integer", nullable: false, defaultValue: 0),
                    trivia_vetoes = table.Column<int>(type: "integer", nullable: false, defaultValue: 0),
                    trivia_veto_overrides = table.Column<int>(type: "integer", nullable: false),
                    drafter_team_id = table.Column<Guid>(type: "uuid", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_drafter_draft_stats", x => new { x.id, x.drafter_id, x.draft_id });
                    table.ForeignKey(
                        name: "fk_drafter_draft_stats_drafter_teams_drafter_team_id",
                        column: x => x.drafter_team_id,
                        principalSchema: "drafts",
                        principalTable: "drafter_teams",
                        principalColumn: "id");
                    table.ForeignKey(
                        name: "fk_drafter_draft_stats_drafters_drafter_id",
                        column: x => x.drafter_id,
                        principalSchema: "drafts",
                        principalTable: "drafters",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_drafter_draft_stats_drafts_draft_id",
                        column: x => x.draft_id,
                        principalSchema: "drafts",
                        principalTable: "drafts",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "drafts_drafter_teams",
                schema: "drafts",
                columns: table => new
                {
                    draft_id = table.Column<Guid>(type: "uuid", nullable: false),
                    drafter_team_id = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_drafts_drafter_teams", x => new { x.draft_id, x.drafter_team_id });
                    table.ForeignKey(
                        name: "fk_drafts_drafter_teams_drafter_teams_drafter_team_id",
                        column: x => x.drafter_team_id,
                        principalSchema: "drafts",
                        principalTable: "drafter_teams",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_drafts_drafter_teams_drafts_draft_id",
                        column: x => x.draft_id,
                        principalSchema: "drafts",
                        principalTable: "drafts",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "drafts_drafters",
                schema: "drafts",
                columns: table => new
                {
                    draft_id = table.Column<Guid>(type: "uuid", nullable: false),
                    drafter_id = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_drafts_drafters", x => new { x.draft_id, x.drafter_id });
                    table.ForeignKey(
                        name: "fk_drafts_drafters_drafters_drafter_id",
                        column: x => x.drafter_id,
                        principalSchema: "drafts",
                        principalTable: "drafters",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_drafts_drafters_drafts_draft_id",
                        column: x => x.draft_id,
                        principalSchema: "drafts",
                        principalTable: "drafts",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "game_boards",
                schema: "drafts",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    draft_id = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_game_boards", x => x.id);
                    table.ForeignKey(
                        name: "fk_game_boards_drafts_draft_id",
                        column: x => x.draft_id,
                        principalSchema: "drafts",
                        principalTable: "drafts",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "trivia_results",
                schema: "drafts",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    draft_id = table.Column<Guid>(type: "uuid", nullable: false),
                    drafter_id = table.Column<Guid>(type: "uuid", nullable: false),
                    position = table.Column<int>(type: "integer", nullable: false),
                    questions_won = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_trivia_results", x => x.id);
                    table.ForeignKey(
                        name: "fk_trivia_results_drafters_drafter_id",
                        column: x => x.drafter_id,
                        principalSchema: "drafts",
                        principalTable: "drafters",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_trivia_results_drafts_draft_id",
                        column: x => x.draft_id,
                        principalSchema: "drafts",
                        principalTable: "drafts",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "draft_host",
                schema: "drafts",
                columns: table => new
                {
                    hosted_drafts_id = table.Column<Guid>(type: "uuid", nullable: false),
                    hosts_id = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_draft_host", x => new { x.hosted_drafts_id, x.hosts_id });
                    table.ForeignKey(
                        name: "fk_draft_host_drafts_hosted_drafts_id",
                        column: x => x.hosted_drafts_id,
                        principalSchema: "drafts",
                        principalTable: "drafts",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_draft_host_hosts_hosts_id",
                        column: x => x.hosts_id,
                        principalSchema: "drafts",
                        principalTable: "hosts",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "picks",
                schema: "drafts",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    position = table.Column<int>(type: "integer", nullable: false),
                    movie_id = table.Column<Guid>(type: "uuid", nullable: false),
                    veto_id = table.Column<Guid>(type: "uuid", nullable: true),
                    drafter_id = table.Column<Guid>(type: "uuid", nullable: false),
                    draft_id = table.Column<Guid>(type: "uuid", nullable: false),
                    drafter_team_id = table.Column<Guid>(type: "uuid", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_picks", x => x.id);
                    table.ForeignKey(
                        name: "fk_picks_drafter_teams_drafter_team_id",
                        column: x => x.drafter_team_id,
                        principalSchema: "drafts",
                        principalTable: "drafter_teams",
                        principalColumn: "id");
                    table.ForeignKey(
                        name: "fk_picks_drafters_drafter_id",
                        column: x => x.drafter_id,
                        principalSchema: "drafts",
                        principalTable: "drafters",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_picks_drafts_draft_id",
                        column: x => x.draft_id,
                        principalSchema: "drafts",
                        principalTable: "drafts",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_picks_movies_movie_id",
                        column: x => x.movie_id,
                        principalSchema: "drafts",
                        principalTable: "movies",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_picks_vetoes_veto_id",
                        column: x => x.veto_id,
                        principalSchema: "drafts",
                        principalTable: "vetoes",
                        principalColumn: "id");
                });

            migrationBuilder.CreateTable(
                name: "veto_overrides",
                schema: "drafts",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    veto_id = table.Column<Guid>(type: "uuid", nullable: false),
                    is_used = table.Column<bool>(type: "boolean", nullable: false),
                    drafter_id = table.Column<Guid>(type: "uuid", nullable: true),
                    drafter_team_id = table.Column<Guid>(type: "uuid", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_veto_overrides", x => x.id);
                    table.ForeignKey(
                        name: "fk_veto_overrides_drafter_teams_drafter_team_id",
                        column: x => x.drafter_team_id,
                        principalSchema: "drafts",
                        principalTable: "drafter_teams",
                        principalColumn: "id");
                    table.ForeignKey(
                        name: "fk_veto_overrides_drafters_drafter_id",
                        column: x => x.drafter_id,
                        principalSchema: "drafts",
                        principalTable: "drafters",
                        principalColumn: "id");
                    table.ForeignKey(
                        name: "fk_veto_overrides_vetoes_veto_id",
                        column: x => x.veto_id,
                        principalSchema: "drafts",
                        principalTable: "vetoes",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "draft_positions",
                schema: "drafts",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    game_board_id = table.Column<Guid>(type: "uuid", nullable: false),
                    name = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: false),
                    picks = table.Column<string>(type: "text", nullable: false),
                    has_bonus_veto = table.Column<bool>(type: "boolean", nullable: false),
                    has_bonus_veto_override = table.Column<bool>(type: "boolean", nullable: false),
                    drafter_id = table.Column<Guid>(type: "uuid", nullable: true),
                    drafter_team_id = table.Column<Guid>(type: "uuid", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_draft_positions", x => x.id);
                    table.ForeignKey(
                        name: "fk_draft_positions_drafter_teams_drafter_team_id",
                        column: x => x.drafter_team_id,
                        principalSchema: "drafts",
                        principalTable: "drafter_teams",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "fk_draft_positions_drafters_drafter_id",
                        column: x => x.drafter_id,
                        principalSchema: "drafts",
                        principalTable: "drafters",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "fk_draft_positions_game_boards_game_board_id",
                        column: x => x.game_board_id,
                        principalSchema: "drafts",
                        principalTable: "game_boards",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "commissioner_overrides",
                schema: "drafts",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    pick_id = table.Column<Guid>(type: "uuid", nullable: false),
                    draft_id = table.Column<Guid>(type: "uuid", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_commissioner_overrides", x => x.id);
                    table.ForeignKey(
                        name: "fk_commissioner_overrides_drafts_draft_id",
                        column: x => x.draft_id,
                        principalSchema: "drafts",
                        principalTable: "drafts",
                        principalColumn: "id");
                    table.ForeignKey(
                        name: "fk_commissioner_overrides_picks_pick_id",
                        column: x => x.pick_id,
                        principalSchema: "drafts",
                        principalTable: "picks",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "ix_commissioner_overrides_draft_id",
                schema: "drafts",
                table: "commissioner_overrides",
                column: "draft_id");

            migrationBuilder.CreateIndex(
                name: "ix_commissioner_overrides_pick_id",
                schema: "drafts",
                table: "commissioner_overrides",
                column: "pick_id",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "ix_draft_host_hosts_id",
                schema: "drafts",
                table: "draft_host",
                column: "hosts_id");

            migrationBuilder.CreateIndex(
                name: "ix_draft_positions_drafter_id",
                schema: "drafts",
                table: "draft_positions",
                column: "drafter_id");

            migrationBuilder.CreateIndex(
                name: "ix_draft_positions_drafter_team_id",
                schema: "drafts",
                table: "draft_positions",
                column: "drafter_team_id");

            migrationBuilder.CreateIndex(
                name: "ix_draft_positions_game_board_id",
                schema: "drafts",
                table: "draft_positions",
                column: "game_board_id");

            migrationBuilder.CreateIndex(
                name: "ix_drafter_draft_stats_draft_id",
                schema: "drafts",
                table: "drafter_draft_stats",
                column: "draft_id");

            migrationBuilder.CreateIndex(
                name: "ix_drafter_draft_stats_drafter_id",
                schema: "drafts",
                table: "drafter_draft_stats",
                column: "drafter_id");

            migrationBuilder.CreateIndex(
                name: "ix_drafter_draft_stats_drafter_team_id",
                schema: "drafts",
                table: "drafter_draft_stats",
                column: "drafter_team_id");

            migrationBuilder.CreateIndex(
                name: "ix_drafter_team_drafter_drafter_team_id",
                schema: "drafts",
                table: "drafter_team_drafter",
                column: "drafter_team_id");

            migrationBuilder.CreateIndex(
                name: "ix_drafts_readable_id",
                schema: "drafts",
                table: "drafts",
                column: "readable_id",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "ix_drafts_drafter_teams_drafter_team_id",
                schema: "drafts",
                table: "drafts_drafter_teams",
                column: "drafter_team_id");

            migrationBuilder.CreateIndex(
                name: "ix_drafts_drafters_drafter_id",
                schema: "drafts",
                table: "drafts_drafters",
                column: "drafter_id");

            migrationBuilder.CreateIndex(
                name: "ix_game_boards_draft_id",
                schema: "drafts",
                table: "game_boards",
                column: "draft_id",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "ix_picks_draft_id",
                schema: "drafts",
                table: "picks",
                column: "draft_id");

            migrationBuilder.CreateIndex(
                name: "ix_picks_drafter_id",
                schema: "drafts",
                table: "picks",
                column: "drafter_id");

            migrationBuilder.CreateIndex(
                name: "ix_picks_drafter_team_id",
                schema: "drafts",
                table: "picks",
                column: "drafter_team_id");

            migrationBuilder.CreateIndex(
                name: "ix_picks_movie_id",
                schema: "drafts",
                table: "picks",
                column: "movie_id");

            migrationBuilder.CreateIndex(
                name: "ix_picks_veto_id",
                schema: "drafts",
                table: "picks",
                column: "veto_id",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "ix_rollover_veto_overrides_drafter_id",
                schema: "drafts",
                table: "rollover_veto_overrides",
                column: "drafter_id",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "ix_rollover_vetoes_drafter_id",
                schema: "drafts",
                table: "rollover_vetoes",
                column: "drafter_id",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "ix_trivia_results_draft_id",
                schema: "drafts",
                table: "trivia_results",
                column: "draft_id");

            migrationBuilder.CreateIndex(
                name: "ix_trivia_results_drafter_id",
                schema: "drafts",
                table: "trivia_results",
                column: "drafter_id");

            migrationBuilder.CreateIndex(
                name: "ix_veto_overrides_drafter_id",
                schema: "drafts",
                table: "veto_overrides",
                column: "drafter_id");

            migrationBuilder.CreateIndex(
                name: "ix_veto_overrides_drafter_team_id",
                schema: "drafts",
                table: "veto_overrides",
                column: "drafter_team_id");

            migrationBuilder.CreateIndex(
                name: "ix_veto_overrides_veto_id",
                schema: "drafts",
                table: "veto_overrides",
                column: "veto_id",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "ix_vetoes_drafter_id",
                schema: "drafts",
                table: "vetoes",
                column: "drafter_id");

            migrationBuilder.CreateIndex(
                name: "ix_vetoes_drafter_team_id",
                schema: "drafts",
                table: "vetoes",
                column: "drafter_team_id");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "commissioner_overrides",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "draft_host",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "draft_positions",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "draft_release_date",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "drafter_draft_stats",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "drafter_team_drafter",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "drafts_drafter_teams",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "drafts_drafters",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "inbox_message_consumers",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "inbox_messages",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "outbox_message_consumers",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "outbox_messages",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "rollover_veto_overrides",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "rollover_vetoes",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "trivia_results",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "veto_overrides",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "picks",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "hosts",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "game_boards",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "movies",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "vetoes",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "drafts",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "drafter_teams",
                schema: "drafts");

            migrationBuilder.DropTable(
                name: "drafters",
                schema: "drafts");
        }
    }
}
